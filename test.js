// Generated by Haxe 4.3.0-rc.1+5f599ba
(function ($global) { "use strict";
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var geom_structure_Mat1x2 = function(x,y) {
	this.y = 0.;
	this.x = 0.;
	this.x = x;
	this.y = y;
};
geom_structure_Mat1x2.__name__ = true;
var geom_structure_Mat1x4 = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	this.w = 1.;
	this.z = 0.;
	this.y = 0.;
	this.x = 0.;
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
geom_structure_Mat1x4.__name__ = true;
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var htmlHelper_tools_DivertTrace = function(left,d) {
	if(left == null) {
		left = 610;
	}
	this.textStyle1 = "<span style=\"font-size:14px; color:Grey\">";
	this.textStyle0 = "<span style=\"font-size:12px; color:Silver\">";
	this.traceString = "";
	this.divertTrace(left,d);
};
htmlHelper_tools_DivertTrace.__name__ = true;
htmlHelper_tools_DivertTrace.prototype = {
	divertTrace: function(left,d) {
		if(d == null) {
			var doc = window.document;
			this.traceDiv = doc.createElement("div");
			doc.body.appendChild(this.traceDiv);
			var dom = this.traceDiv;
			var style = dom.style;
			style.position = "absolute";
			style.top = "0px";
			style.left = (left == null ? "null" : "" + left) + "px";
			style.height = "500px";
			style.width = "500px";
			style.zIndex = "99";
			style.overflow = "auto";
		} else {
			this.traceDiv = d;
		}
		haxe_Log.trace = $bind(this,this.myTrace);
	}
	,myTrace: function(v,inf) {
		if(Std.string(v) == "") {
			return;
		}
		this.traceString += this.textStyle0 + inf.className + "." + inf.methodName + " ( " + (inf.lineNumber == null ? "null" : "" + inf.lineNumber) + " )" + "</span>" + "<br> - " + this.textStyle1 + Std.string(v) + "</span>" + "<br>";
		this.traceDiv.innerHTML = this.traceString;
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var morrisMen_FriendMorris = function(morrisNode,rose) {
	this.morrisNode = morrisNode;
	this.rose = rose;
};
morrisMen_FriendMorris.__name__ = true;
var morrisMen_MorrisNode = function(pos,name,contain) {
	if(contain == null) {
		contain = 0;
	}
	if(name == null) {
		name = "";
	}
	this.friends = [];
	this.pos = pos;
	this.contain = contain;
	this.name = name;
	this.pos3D = new geom_structure_Mat1x4(pos.x,pos.y,0.1,1.);
};
morrisMen_MorrisNode.__name__ = true;
morrisMen_MorrisNode.prototype = {
	addFriends: function(all) {
		var morrisNode;
		var _g = 0;
		var _g1 = all.length;
		while(_g < _g1) {
			var i = _g++;
			morrisNode = all[i];
			this.addFriend(morrisNode);
		}
	}
	,addFriend: function(morris) {
		if(!this.hasFriend(morris)) {
			var rose = this.calculateMorrisRose(morris);
			var newFriend = new morrisMen_FriendMorris(morris,rose);
			this.friends[this.friends.length] = newFriend;
			if(!newFriend.morrisNode.hasFriend(this)) {
				newFriend.morrisNode.addFriend(this);
			}
		}
	}
	,hasFriend: function(morris) {
		var found = false;
		var friend;
		if(morris != null) {
			var _g = 0;
			var _g1 = this.friends.length;
			while(_g < _g1) {
				var i = _g++;
				friend = this.friends[i];
				if(friend.morrisNode == morris) {
					found = true;
					break;
				}
			}
		}
		return found;
	}
	,calculateMorrisRose: function(morris) {
		var posNext = morris.pos;
		var a = this.pos;
		var dx = a.x - posNext.x;
		var dy = a.y - posNext.y;
		var theta = Math.atan2(dy,dx);
		var z2p;
		if(theta >= 0 && theta > Math.PI) {
			z2p = theta;
		} else {
			var a = theta % (2 * Math.PI);
			z2p = a >= 0 ? a : a + 2 * Math.PI;
		}
		var v = Math.round(z2p * 32);
		if(v < 0) {
			var a = v % 32;
			v = a >= 0 ? a : a + 32;
		} else if(v >= 32) {
			v %= 32;
		}
		var r = v;
		var this1 = r;
		var rose = this1;
		return rose;
	}
};
var morrisMen_NineMorrisBoard = function(sx,sy,inaWid) {
	this.morrisNodes = [];
	this.inaWid = inaWid;
	this.sx = sx;
	this.sy = sy;
};
morrisMen_NineMorrisBoard.__name__ = true;
morrisMen_NineMorrisBoard.prototype = {
	generate: function() {
		var inaGap = this.inaWid / 2;
		var midWid = this.inaWid * 3;
		var midGap = midWid / 2;
		var outWid = midWid * 3;
		var outGap = outWid / 2;
		var dx = 0.;
		var dy = 0.;
		dx = this.sx;
		dy = this.sy;
		var ma = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"ma",0);
		dx += outGap;
		var mb = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mb",0);
		ma.addFriend(mb);
		dx += outGap;
		var mc = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mc",0);
		mb.addFriend(mc);
		dx = this.sx + inaGap;
		dy = this.sy + inaGap;
		var md = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"md",0);
		dx += midGap;
		var me = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"me",0);
		me.addFriends([md,mb]);
		dx += midGap;
		var mf = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mf",0);
		md.addFriend(mf);
		dx = this.sx + midGap;
		dy = this.sy + midGap;
		var mg = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mg",0);
		dx += inaGap;
		var mh = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mh",0);
		mh.addFriends([mg,me]);
		dx += inaGap;
		var mi = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mi",0);
		mh.addFriend(mi);
		dx = this.sx + midGap;
		dy = this.sy + midGap;
		var mj = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mj",0);
		ma.addFriend(mj);
		dx += inaGap;
		var mk = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mk",0);
		mk.addFriends([mj,md]);
		dx += inaGap;
		var ml = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"ml",0);
		mk.addFriend(ml);
		dx += this.inaWid;
		var mm = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mm",0);
		mi.addFriend(mm);
		dx += inaGap;
		var mn = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mn",0);
		mn.addFriends([mf,mn]);
		dx += inaGap;
		var mo = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mo",0);
		mo.addFriends([mc,mn]);
		var dx = this.sx + midWid;
		var dy = this.sy + midWid;
		var mp = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mp",0);
		ml.addFriend(mp);
		dx += inaGap;
		var mq = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mq",0);
		mp.addFriend(mq);
		dx += inaGap;
		var mr = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mr",0);
		mr.addFriend(mr);
		var dx = this.sx + inaGap;
		var dy = this.sy + inaGap + midWid;
		var ms = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"ms",0);
		ms.addFriend(mk);
		dx += midGap;
		var mt = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mt",0);
		mt.addFriends([mq,ms]);
		dx += midGap;
		var mu = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mu",0);
		mu.addFriends([mn,mt]);
		var dx = this.sx;
		var dy = this.sy + outWid;
		var mv = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mv",0);
		mj.addFriend(mv);
		dx += outGap;
		var mw = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mw",0);
		mw.addFriends([mt,mv]);
		dx += outGap;
		var mx = new morrisMen_MorrisNode(new geom_structure_Mat1x2(dx,dy),"mx",0);
		mx.addFriends([mo,mw]);
		this.morrisNodes = [ma,mb,mc,md,me,mf,mg,mh,mi,mj,mk,ml,mm,mn,mo,mp,mq,mr,ms,mt,mu,mv,mw,mx];
	}
};
function morrisMen_Test_main() {
	var divertTrace = new htmlHelper_tools_DivertTrace();
	var board = new morrisMen_NineMorrisBoard(100.,100.,30.);
	board.generate();
	haxe_Log.trace(board.morrisNodes,{ fileName : "src/morrisMen/Test.hx", lineNumber : 8, className : "morrisMen._Test.Test_Fields_", methodName : "main"});
}
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
morrisMen_Test_main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
